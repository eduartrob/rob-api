name: Deploy to EC2 on develop branch

on:
  push:
    branches:
      - develop

jobs:
  build-and-push:
    name: Build and Push to Docker Hub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/rob-api:latest

  deploy:
    name: Deploy to EC2
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Navegar al directorio de la aplicación
            # Asegurarse de que el directorio existe
            APP_DIR="/home/${{ secrets.EC2_USER }}/rob-api"
            mkdir -p $APP_DIR
            cd $APP_DIR

            # Crear el archivo .env con los secrets de GitHub
            echo "${{ secrets.ENV_FILE }}" > .env

            # Exportar el nombre de usuario de Docker Hub para que docker-compose lo use
            export DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            
            # Pull de la imagen más reciente desde Docker Hub
            docker pull $DOCKERHUB_USERNAME/rob-api:latest

            # Detener y reiniciar los servicios con docker-compose
            docker compose down
            docker compose up -d